(module(import "imports" "log" (func $printInt (param i32)))(import "graphics" "draw" (func $draw (param i32)(param i32)(param i32)))(import "graphics" "reqNextFrame" (func $finishDrawing))(import "graphics" "clearScreen" (func $clearScreen))(global $x (mut i32)(i32.const 0))(global $y (mut i32)(i32.const 0))(global $vVel (mut i32)(i32.const 0))(global $hVel (mut i32)(i32.const 0))(global $left (mut i32)(i32.const 0))(global $right (mut i32)(i32.const 0))(global $up (mut i32)(i32.const 0))(global $down (mut i32)(i32.const 0))(global $gameFrame (mut i32)(i32.const 0))(global $lastPressedDir (mut i32)(i32.const 0))(func $start(export "start")(global.set $x(i32.const 0))(global.set $y(i32.const 0))(global.set $vVel(i32.const 0))(global.set $left(i32.const 0))(global.set $right(i32.const 0))(global.set $gameFrame(i32.const 0)))(func $FP2I(param $z i32)(result i32)(local.get $z)(i32.const 16)(i32.div_s)(return))(func $I2FP(param $z i32)(result i32)(local.get $z)(i32.const 16)(i32.mul)(return))(func $GetHighOutOfFour(param $a i32)(param $b i32)(param $c i32)(param $d i32)(result i32)(local.get $a)(local.get $b)(i32.gt_s)(i32.const 0)(i32.ne)(local.get $a)(local.get $c)(i32.gt_s)(i32.const 0)(i32.ne)(local.get $a)(local.get $d)(i32.gt_s)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(if (then (i32.const 0)(return))(else ))(local.get $b)(local.get $a)(i32.gt_s)(i32.const 0)(i32.ne)(local.get $b)(local.get $c)(i32.gt_s)(i32.const 0)(i32.ne)(local.get $b)(local.get $d)(i32.gt_s)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(if (then (i32.const 1)(return))(else ))(local.get $c)(local.get $a)(i32.gt_s)(i32.const 0)(i32.ne)(local.get $c)(local.get $b)(i32.gt_s)(i32.const 0)(i32.ne)(local.get $c)(local.get $d)(i32.gt_s)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(if (then (i32.const 2)(return))(else ))(i32.const 3)(return))(func $CheckCollision(param $boxX i32)(param $boxY i32)(param $boxW i32)(param $boxH i32)(local $topVar i32)(local $rightP i32)(local $leftP i32)(local $bottomP i32)(local $topP i32)(i32.add (global.get $y)(call $FP2I)(global.get $vVel)(call $FP2I)(i32.sub)(i32.const 32))(local.get $boxY)(i32.gt_s)(i32.const 0)(i32.ne)(global.get $y)(call $FP2I)(global.get $vVel)(call $FP2I)(i32.sub)(i32.add (local.get $boxY)(local.get $boxH))(i32.lt_s)(i32.const 0)(i32.ne)(i32.add (i32.add (global.get $x)(call $FP2I)(global.get $hVel)(call $FP2I))(i32.const 32))(local.get $boxX)(i32.gt_s)(i32.const 0)(i32.ne)(i32.add (global.get $x)(global.get $hVel))(call $FP2I)(i32.add (local.get $boxX)(local.get $boxW))(i32.lt_s)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(i32.const 0)(i32.ne)(i32.add)(i32.const 2)(i32.eq)(if (then (local.set $topP(i32.add (local.get $boxY)(local.get $boxH))(global.get $y)(call $FP2I)(i32.sub))(local.set $bottomP(i32.add (global.get $y)(call $FP2I)(i32.const 32))(local.get $boxY)(i32.sub))(local.set $leftP(i32.add (local.get $boxX)(local.get $boxW))(global.get $x)(call $FP2I)(i32.sub))(local.set $rightP(i32.add (global.get $x)(call $FP2I)(i32.const 32))(local.get $boxX)(i32.sub))(local.set $topVar(local.get $topP)(local.get $bottomP)(local.get $leftP)(local.get $rightP)(call $GetHighOutOfFour))(local.get $topVar)(i32.const 0)(i32.eq)(if (then (global.set $vVel(i32.const 0))(global.set $y(local.get $boxY)(i32.const 32)(i32.sub)(call $I2FP)))(else (local.get $topVar)(i32.const 1)(i32.eq)(if (then (global.set $vVel(i32.const 0))(global.set $y(i32.add (local.get $boxY)(local.get $boxH))(call $I2FP)))(else (local.get $topVar)(i32.const 2)(i32.eq)(if (then (global.set $hVel(i32.const 0))(global.set $x(local.get $boxX)(i32.const 32)(i32.sub)(call $I2FP)))(else (local.get $topVar)(i32.const 3)(i32.eq)(if (then (global.set $hVel(i32.const 0))(global.set $x(i32.add (local.get $boxX)(local.get $boxW))(call $I2FP)))(else )))))))))(else )))(func $DrawGame(i32.const 3)(i32.const 30)(i32.const 30)(call $draw)(i32.const 1)(global.get $x)(i32.const 16)(i32.div_s)(global.get $y)(i32.const 16)(i32.div_s)(call $draw))(func $MainLoop(export "MainLoop")(global.set $vVel(global.get $vVel)(i32.const 1)(i32.sub))(global.set $y(global.get $y)(global.get $vVel)(i32.sub))(global.get $right)(if (then (global.set $hVel(i32.add (global.get $hVel)(i32.const 1))))(else (global.get $left)(if (then (global.set $hVel(global.get $hVel)(i32.const 1)(i32.sub)))(else (global.get $hVel)(i32.const 0)(i32.gt_s)(if (then (global.set $hVel(global.get $hVel)(i32.const 1)(i32.sub)))(else (global.get $hVel)(i32.const 0)(i32.lt_s)(if (then (global.set $hVel(i32.add (global.get $hVel)(i32.const 1))))(else (global.set $hVel(i32.const 0))))))))))(global.set $x(i32.add (global.get $x)(global.get $hVel)))(global.get $y)(i32.const 16)(i32.div_s)(i32.const 100)(i32.gt_s)(if (then (global.set $y(i32.const 100)(i32.const 16)(i32.mul))(global.set $vVel(i32.const 0)))(else ))(i32.const 30)(i32.const 30)(i32.const 16)(i32.const 16)(call $CheckCollision)(call $clearScreen)(call $DrawGame))(func $Jump(global.set $vVel(i32.const 2)(i32.const 16)(i32.mul)))(func $OnKeyDown(export "OnKeyDown")(param $e i32)(local.get $e)(i32.const 39)(i32.eq)(if (then (global.set $right(i32.const 1)))(else ))(local.get $e)(i32.const 37)(i32.eq)(if (then (global.set $left(i32.const 1)))(else ))(local.get $e)(i32.const 38)(i32.eq)(if (then (global.set $up(i32.const 1))(call $Jump))(else ))(local.get $e)(i32.const 40)(i32.eq)(if (then (global.set $down(i32.const 1)))(else )))(func $OnKeyUp(export "OnKeyUp")(param $e i32)(local.get $e)(i32.const 39)(i32.eq)(if (then (global.set $right(i32.const 0)))(else ))(local.get $e)(i32.const 37)(i32.eq)(if (then (global.set $left(i32.const 0)))(else ))(local.get $e)(i32.const 38)(i32.eq)(if (then (global.set $up(i32.const 0)))(else ))(local.get $e)(i32.const 40)(i32.eq)(if (then (global.set $down(i32.const 0)))(else )))(func $OnClick(export "OnClick")(param $nx i32)(param $ny i32)(local.get $nx)(call $printInt)(local.get $ny)(call $printInt)))